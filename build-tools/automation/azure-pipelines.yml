trigger:
  branches:
    include:
    - main
    - release/*
  tags:
    include:
    - '*'

pr: none

resources:
  repositories:
  - repository: MicroBuildTemplate
    type: git
    name: 1ESPipelineTemplates/MicroBuildTemplate

parameters:
- name: ApiScanSourceBranch
  default: refs/heads/main
- name: SignArtifactsOverride
  default: false
- name: Skip1ESComplianceTasks
  default: false

variables:
- template: /build-tools/automation/yaml-templates/variables.yml@self
- name: MicroBuildSignType
  ${{ if or(startsWith(variables['Build.SourceBranch'], 'refs/tags/'), eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(parameters.SignArtifactsOverride, 'true')) }}:
    value: Real
  ${{ else }}:
    value: Test
- name: ToolchainArtifactName
  ${{ if or(startsWith(variables['Build.SourceBranch'], 'refs/tags/'), eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(parameters.SignArtifactsOverride, 'true')) }}:
    value: android-llvm-toolchain-signed
  ${{ else }}:
    value: android-llvm-toolchain-unsigned
- name: ApiScanSoftwareName
  value: VS
- name: ApiScanSoftwareVersion
  value: 17.10
- name: TeamName
  value: XamarinAndroid

extends:
  template: azure-pipelines/MicroBuild.1ES.Official.yml@MicroBuildTemplate
  parameters:
    sdl:
      ${{ if eq('${{ parameters.Skip1ESComplianceTasks }}', 'true') }}:
        enableAllTools: false
      binskim:
        scanOutputDirectoryOnly: true
      suppression:
        suppressionFile: $(Build.SourcesDirectory)\.gdn\.gdnsuppress
      sourceAnalysisPool:
        name: AzurePipelines-EO
        image: $(WindowsPoolImage1ESPT)
        os: windows
    stages:
    - template: /build-tools/automation/yaml-templates/stage-build.yml@self

    - template: /build-tools/automation/yaml-templates/stage-package.yml@self

    - stage: release
      displayName: Release
      dependsOn: package
      condition: and(eq(dependencies.package.result, 'Succeeded'), eq(variables['MicroBuildSignType'], 'Real'))
      jobs:
      - job: release_approval
        displayName: Wait for Approval
        timeoutInMinutes: 90
        pool: server
        steps:
        - task: ManualValidation@0
          timeoutInMinutes: 60
          inputs:
            instructions: 'Press "Resume" to create a GitHub release with artifacts produced for this build/tag.'
            onTimeout: reject
          continueOnError: true

      - job: create_github_release
        displayName: Create GitHub Release
        dependsOn: release_approval
        condition: and(eq(dependencies.release_approval.result, 'Succeeded'), eq(variables['MicroBuildSignType'], 'Real'))
        timeoutInMinutes: 120
        pool:
          name: Azure Pipelines
          vmImage: macOS-latest
          os: macOS
        workspace:
          clean: all
        steps:
        - checkout: self
          submodules: recursive

        - task: DownloadPipelineArtifact@2
          inputs:
            artifactName: $(ToolchainArtifactName)
            downloadPath: $(Build.StagingDirectory)/toolchain-zip

        - task: CmdLine@2
          displayName: Prepare release artifacts
          inputs:
            script: ./prepare-release.sh $(Build.StagingDirectory)/toolchain-zip/android-llvm-toolchain*.zip
            workingDirectory: $(Build.SourcesDirectory)

        - pwsh: 'gci env: | format-table -autosize -wrap'
          displayName: Print environment variables

        - task: GitHubRelease@1
          inputs:
            gitHubConnection: dotnet
            repositoryName: $(Build.Repository.Name)
            action: create
            target: $(Build.SourceVersion)
            tagSource: userSpecifiedTag
            tag: $(GitTagValue)
            title: android-native-tools $(GitTagValue)
            assets: $(Build.SourcesDirectory)/android-native-tools-$(GitTagValue).7z

    - stage: Compliance
      displayName: Compliance
      dependsOn: package
      condition: and(eq(dependencies.package.result, 'Succeeded'), eq(variables['Build.SourceBranch'], '${{ parameters.ApiScanSourceBranch }}'))
      jobs:
      - job: api_scan
        displayName: API Scan
        pool:
          name: Maui-1ESPT
          image: $(WindowsPoolImage1ESPT)
          os: windows
        timeoutInMinutes: 360
        workspace:
          clean: all
        steps:
        - task: DownloadPipelineArtifact@2
          inputs:
            artifactName: $(ToolchainArtifactName)
            downloadPath: $(Build.StagingDirectory)\toolchain-zip

        - task: ExtractFiles@1
          displayName: Extract $(ToolchainArtifactName)
          inputs:
            archiveFilePatterns: $(Build.StagingDirectory)\**\*.zip
            destinationFolder: $(Build.SourcesDirectory)\binutils

        - task: CopyFiles@2
          displayName: Collect Files for APIScan
          inputs:
            Contents: |
              $(Build.SourcesDirectory)\binutils\windows\**\?(*.dll|*.exe|*.pdb)
            TargetFolder: $(Agent.TempDirectory)\T

        - powershell: Get-ChildItem -Path "$(Agent.TempDirectory)\T" -Recurse
          displayName: List Files for APIScan

        - task: APIScan@2
          displayName: Run APIScan
          inputs:
            softwareFolder: $(Agent.TempDirectory)\T
            symbolsFolder: 'SRV*http://symweb;$(Agent.TempDirectory)\T'
            softwareName: $(ApiScanSoftwareName)
            softwareVersionNum: $(ApiScanSoftwareVersion)
            isLargeApp: true
            toolVersion: Latest
          env:
            AzureServicesAuthConnectionString: runAs=App;AppId=$(ApiScanMAUI1ESPTManagedId)

        - task: SdtReport@2
          displayName: Guardian Export - Security Report
          inputs:
            GdnExportAllTools: false
            GdnExportGdnToolApiScan: true
            GdnExportOutputSuppressionFile: apiscan.gdnsuppress

        - task: PublishSecurityAnalysisLogs@3
          displayName: Publish Guardian Artifacts
          inputs:
            ArtifactName: APIScan Logs
            ArtifactType: Container
            AllTools: false
            APIScan: true
            ToolLogsNotFoundAction: Warning

        - task: PostAnalysis@2
          displayName: Fail Build on Guardian Issues
          inputs:
            GdnBreakAllTools: false
            GdnBreakGdnToolApiScan: true
