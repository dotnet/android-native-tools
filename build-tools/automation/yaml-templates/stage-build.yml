parameters:
- name: use1ESTemplate
  type: boolean
  default: true

stages:
- stage: build
  displayName: Build Stage
  jobs:
  - job: build_linux
    displayName: Build Linux
    timeoutInMinutes: 480
    ${{ if eq(parameters.use1ESTemplate, true) }}:
      pool:
        name: MAUI-1ESPT
        image: $(LinuxPoolImage1ESPT)
        os: linux
      templateContext:
        outputs:
        - output: pipelineArtifact
          displayName: Upload logs
          condition: always()
          artifactName: build-logs-linux-$(System.JobAttempt)
          targetPath: $(Build.StagingDirectory)
          sbomEnabled: false
        - output: pipelineArtifact
          displayName: Upload linux-unsigned artifacts
          artifactName: artifacts-linux-unsigned
          targetPath: artifacts
    ${{ else }}:
      pool:
        name: Azure Pipelines
        vmImage: $(LinuxPoolImageHosted)
    steps:
    - checkout: self
      submodules: recursive

    - script: >-
        sudo apt-get update;
        sudo apt-get -f -u install cmake ninja-build chrpath texinfo sharutils libffi-dev
        lsb-release patchutils diffstat xz-utils python3-dev libedit-dev libncurses5-dev swig
        python3-six python3-sphinx binutils-dev libxml2-dev libjsoncpp-dev pkg-config lcov
        procps help2man zlib1g-dev g++-multilib libjs-mathjax python3-recommonmark libpfm4-dev
        python3-setuptools libz3-dev ccache
      displayName: Install LLVM build dependencies

    - script: sudo apt-get -f -u install mingw-w64 libz-mingw-w64-dev
      displayName: Install Xamarin.Android Utilities build dependencies

    - script: ./build-llvm.sh
      env:
        CC: gcc-10
        CXX: g++-10
      displayName: Build LLVM

    - script: ./build-xa-utils.sh
      env:
        CC: gcc-10
        CXX: g++-10
      displayName: Build utilities

    - script: |
        rsync -avm --include 'config.*' --include '*.log' --include '*.txt' --include='*/' --exclude='*' $(BUILD_DIR) $(Build.StagingDirectory)
      displayName: Copy logs
      condition: always()

    - ${{ if ne(parameters.use1ESTemplate, true) }}:
      - task: PublishPipelineArtifact@1
        displayName: Upload logs
        inputs:
          artifactName: build-logs-linux-$(System.JobAttempt)
          targetPath: $(Build.StagingDirectory)
          condition: always()

      - task: PublishPipelineArtifact@1
        displayName: Upload linux-unsigned artifacts
        inputs:
          artifactName: artifacts-linux-unsigned
          targetPath: artifacts


  - job: build_macos
    displayName: Build macOS
    timeoutInMinutes: 480
    pool:
      name: Azure Pipelines
      vmImage: macOS-latest
      os: macOS
    ${{ if eq(parameters.use1ESTemplate, true) }}:
      templateContext:
        outputs:
        - output: pipelineArtifact
          displayName: Upload logs
          condition: always()
          artifactName: build-logs-macos-$(System.JobAttempt)
          targetPath: $(Build.StagingDirectory)
          sbomEnabled: false
        - output: pipelineArtifact
          displayName: Upload macos-unsigned artifacts
          artifactName: artifacts-macos-unsigned
          targetPath: artifacts
    steps:
    - checkout: self
      submodules: recursive

    - script: |
        brew update
        export HOMEBREW_NO_INSTALL_UPGRADE=1 && brew install cmake ninja ccache
      displayName: Install LLVM build dependencies

    - script: export HOMEBREW_NO_INSTALL_UPGRADE=1 && brew install make xz
      displayName: Install Xamarin.Android Utilities build dependencies

    - script: bash ./build-llvm.sh
      displayName: build LLVM

    - script: bash ./build-xa-utils.sh
      displayName: Build utilities

    - script: |
        rsync -avm --include 'config.*' --include '*.log' --include '*.txt' --include='*/' --exclude='*' $(BUILD_DIR) $(Build.StagingDirectory)
      displayName: Copy logs
      condition: always()

    - ${{ if ne(parameters.use1ESTemplate, true) }}:
      - task: PublishPipelineArtifact@1
        displayName: Upload logs
        inputs:
          artifactName: build-logs-macos-$(System.JobAttempt)
          targetPath: $(Build.StagingDirectory)
          condition: always()

      - task: PublishPipelineArtifact@1
        displayName: Upload macos-unsigned artifacts
        inputs:
          artifactName: artifacts-macos-unsigned
          targetPath: artifacts


  - job: build_windows
    displayName: Build Windows
    timeoutInMinutes: 600
    ${{ if eq(parameters.use1ESTemplate, true) }}:
      pool:
        name: MAUI-1ESPT
        image: $(WindowsPoolImage1ESPT)
        os: windows
      templateContext:
        outputs:
        - output: pipelineArtifact
          displayName: Upload windows-unsigned artifacts
          artifactName: artifacts-windows-unsigned
          targetPath: artifacts
    ${{ else }}:
      pool:
        name: Azure Pipelines
        vmImage: $(WindowsPoolImageHosted)
    steps:
    - checkout: self
      submodules: recursive

    - script: ./build-xa-utils-azure.cmd
      displayName: Build utilities

    - script: ./build-llvm-azure.cmd
      displayName: Build Windows LLVM

    - ${{ if ne(parameters.use1ESTemplate, true) }}:
      - task: PublishPipelineArtifact@1
        displayName: Upload windows-unsigned artifacts
        inputs:
          artifactName: artifacts-windows-unsigned
          targetPath: artifacts
